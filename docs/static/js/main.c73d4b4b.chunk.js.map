{"version":3,"sources":["services/callToApi.js","components/Dummy.js","components/SolutionLetters.js","components/ErrorLetters.js","components/Form.js","components/Header.js","components/Footer.js","components/Game.js","components/Instructions.js","components/Options.js","components/NotFoundPage.js","components/App.js","index.js"],"names":["callToApi","fetch","then","response","json","body","Word","Dummy","props","className","calcErrors","SolutionLetters","renderSolutionLetters","ErrorLetters","renderErrorLetters","Form","onSubmit","ev","preventDefault","htmlFor","onChange","handleLastLetter","autoComplete","maxLength","type","name","id","value","lastLetter","Header","Footer","navData","isActive","to","Game","Instructions","role","title","Options","console","log","target","handleInput","autoFocus","NotFoundPage","App","useState","setLastLetter","word","setWord","userLetters","setUserLetters","useEffect","findWrongLetters","filter","userLetter","includes","length","path","element","split","map","letter","index","find","findLetters","incorrectLetter","isValid","pattern","RegExp","test","validar","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c73d4b4b.chunk.js","sourcesContent":["const callToApi = () => {\r\n    return fetch('https://palabras-aleatorias-public-api.herokuapp.com/random')\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            const result = response.body.Word;\r\n            return result;\r\n        });\r\n};\r\n\r\nexport default callToApi;","import '../styles/components/Dummy.scss';\r\nconst Dummy = (props) => {\r\n    return (\r\n        <section className={`dummy error-${props.calcErrors()}`}>\r\n            <span className=\"error-13 eye\"></span>\r\n            <span className=\"error-12 eye\"></span>\r\n            <span className=\"error-11 line\"></span>\r\n            <span className=\"error-10 line\"></span>\r\n            <span className=\"error-9 line\"></span>\r\n            <span className=\"error-8 line\"></span>\r\n            <span className=\"error-7 line\"></span>\r\n            <span className=\"error-6 head\"></span>\r\n            <span className=\"error-5 line\"></span>\r\n            <span className=\"error-4 line\"></span>\r\n            <span className=\"error-3 line\"></span>\r\n            <span className=\"error-2 line\"></span>\r\n            <span className=\"error-1 line\"></span>\r\n        </section>\r\n    )\r\n}\r\nexport default Dummy;","import '../styles/components/_letters.scss';\r\nconst SolutionLetters = (props) => {\r\n    return (\r\n        <div className=\"solution\">\r\n            <h2 className=\"title\">Solución:</h2>\r\n            <ul className=\"letters\">\r\n                {props.renderSolutionLetters()}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default SolutionLetters;","import '../styles/components/_letters.scss';\r\nconst ErrorLetters = (props) => {\r\n    return (\r\n        <div className=\"feedback\">\r\n            <h2 className=\"title\">Letras falladas:</h2>\r\n            <ul className=\"letters\">\r\n                {props.renderErrorLetters()}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default ErrorLetters;","import '../styles/components/_form.scss';\r\nconst Form = (props) => {\r\n    return (\r\n        <form className=\"form\" onSubmit={ev => ev.preventDefault()}>\r\n            <label className=\"title\" htmlFor=\"last-letter\">\r\n                Escribe una letra:\r\n            </label>\r\n            <input\r\n                onChange={props.handleLastLetter}\r\n                autoComplete=\"off\"\r\n                className=\"form__input\"\r\n                maxLength=\"1\"\r\n                type=\"text\"\r\n                name=\"last-letter\"\r\n                id=\"last-letter\"\r\n                value={props.lastLetter}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nexport default Form;","import '../styles/components/Header.scss';\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1 className=\"header__title\">Juego del ahorcado</h1>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import '../styles/components/Footer.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <nav>\r\n                <ul>\r\n                    <li className=\"footer__menu-item\">\r\n                        <NavLink className={(navData) => { return (navData.isActive ? \"footer__menu-link active\" : \"footer__menu-link \") }} to=\"/\">\r\n                            A jugar\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"footer__menu-item\">\r\n                        <NavLink className={(navData) => { return (navData.isActive ? \"footer__menu-link active\" : \"footer__menu-link \") }} to=\"/instructions\">\r\n                            ¿Cómo se juega?\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"footer__menu-item\">\r\n                        <NavLink className={(navData) => { return (navData.isActive ? \"footer__menu-link active\" : \"footer__menu-link \") }} to=\"/options\">\r\n                            Más opciones\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <small className=\"footer__copy\">© Adalab</small>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import Dummy from './Dummy';\r\nimport SolutionLetters from './SolutionLetters';\r\nimport ErrorLetters from './ErrorLetters';\r\nimport Form from './Form';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nconst Game = (props) => {\r\n    return (\r\n        <div>\r\n            <Header></Header>\r\n            <main className=\"main\">\r\n                <section>\r\n                    <SolutionLetters renderSolutionLetters={props.renderSolutionLetters}></SolutionLetters>\r\n                    <ErrorLetters renderErrorLetters={props.renderErrorLetters}></ErrorLetters>\r\n                    <Form handleLastLetter={props.handleLastLetter} lastLetter={props.lastLetter}></Form>\r\n                </section>\r\n                <Dummy calcErrors={props.calcErrors}></Dummy>\r\n            </main>\r\n            <Footer></Footer>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Game;","import '../styles/components/Instructions.scss';\r\nimport Dummy from \"./Dummy\";\r\nimport { Link } from 'react-router-dom';\r\nconst Instructions = (props) => {\r\n    return (\r\n\r\n        <div className=\"instructions_page\">\r\n            <section className=\"instructions\">\r\n                <h2>Instrucciones del juego:</h2>\r\n                <p>Hay dos modalidades para jugar al juego del ahorcado: </p>\r\n                <h4 className=\"instructions_headings\">1.) Tratar de adivinar una palabra aleatoria:</h4>\r\n                <p>\r\n                    Únicamente habrá que ir introduciendo una por una letras en el campo de texto hasta que se complete la palabra. Pero cuidado de no fallar más de 13 veces <span role=\"img\" aria-label=\"emoji calavera\" title=\"emoji calavera\">&#128128;</span>\r\n                </p>\r\n                <h4 className=\"instructions_headings\">2. ) Jugar en grupo:</h4>\r\n                <p>\r\n                    En la pestaña de <Link to=\"/options\">Más opciones</Link> se introducirá una palabra (secretamente). A continuación habrá que dirigirse de nuevo a la pestaña<Link to=\"/\"> A jugar</Link>. Allí el resto de personas tratarán de adivinar dicha palabra.\r\n                </p>\r\n            </section>\r\n            <Dummy calcErrors={props.calcErrors}></Dummy>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Instructions;","import '../styles/components/Options.scss';\r\nimport Dummy from \"./Dummy\";\r\n\r\nconst Options = (props) => {\r\n    const handleWordToGuess = (ev) => {\r\n        console.log(ev.target.value);\r\n        props.handleInput(ev.target.value);\r\n    }\r\n    return (\r\n        <section className=\"options\">\r\n            <div className=\"options_container\">\r\n                <form onSubmit={(ev) => { ev.preventDefault() }}>\r\n                    <label className=\"title\" htmlFor=\"word\">\r\n                        Escribe aquí la palabra que hay que adivinar:\r\n                    </label>\r\n                    <input\r\n                        onChange={handleWordToGuess}\r\n                        autoFocus\r\n                        autoComplete=\"off\"\r\n                        className=\"form__input\"\r\n                        maxLength=\"15\"\r\n                        type=\"text\"\r\n                        id=\"word\"\r\n                        name=\"word\"\r\n                    />\r\n                </form>\r\n            </div>\r\n            <Dummy calcErrors={props.calcErrors}></Dummy>\r\n        </section>\r\n\r\n    )\r\n}\r\nexport default Options;","import { Link } from 'react-router-dom';\r\nimport '../styles/components/NotFoundPage.scss';\r\nimport Dummy from \"./Dummy\";\r\n\r\n\r\nconst NotFoundPage = (props) => {\r\n    return (\r\n        <div className=\"nofoundpage\">\r\n            <div className=\"nofoundpage_message\">\r\n                <h2>Parece que aquí no hay nada</h2>\r\n                <Link to=\"/\">Volver al inicio</Link>\r\n            </div>\r\n            <Dummy calcErrors={props.calcErrors}></Dummy>\r\n        </div>\r\n    )\r\n}\r\nexport default NotFoundPage;","import '../styles/main.scss';\nimport { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport callToApi from '../services/callToApi';\n// import Header from './Header';\nimport Game from './Game';\n// import Footer from './Footer';\nimport Instructions from './Instructions';\nimport Options from './Options';\nimport NotFoundPage from './NotFoundPage';\n\n\n\nfunction App() {\n  let nErrors;\n  const [lastLetter, setLastLetter] = useState('');\n  const [word, setWord] = useState('');\n  const [userLetters, setUserLetters] = useState([]);\n\n  useEffect(() => {\n    callToApi().then(response => {\n      setWord(response);\n    })\n  }, []);\n\n  // start of handleLastLetter()\n  const handleLastLetter = (ev) => {\n    setLastLetter(ev.target.value);\n    const valido = validar(ev.target.value);\n    if (valido) {\n      const isIn = userLetters.find((userLetter) => {\n        return userLetter === ev.target.value;\n      })\n      if (!isIn) {\n        setUserLetters([...userLetters, ev.target.value]);\n      }\n    }\n  };\n  // end of handleLastLetter()\n\n  // start of validar()\n  function validar(value) {\n    let isValid;\n    // pattern to match:\n    const pattern = new RegExp('^[a-zA-ZÀ-ÿ\\u00f1\\u00d1]$');\n    //if input is empty it won't be valid:\n    if (!value) {\n      isValid = false;\n    } else {\n      //if input doesn't match the permitted pattern it won't be valid:\n      if (!pattern.test(value)) {\n        isValid = false;\n      } else {\n        isValid = true;\n      }\n    }\n    return isValid;\n  }\n  // end of validar()\n\n  const handleInput = (value) => {\n    setWord(value);\n    setLastLetter('');\n    setUserLetters([]);\n  }\n\n  const findLetters = (letter) => {\n    return userLetters.find((userLetter) => {\n      return userLetter === letter;\n    })\n  }\n\n\n  const renderSolutionLetters = () => {\n    const wordLetters = word.split('');\n    return wordLetters.map((letter, index) => {\n      if (findLetters(letter)) {\n        return <li key={index} className=\"letter\">{letter}</li>\n      }\n      else {\n        return <li key={index} className=\"letter\"></li>\n      }\n\n    });\n  }\n\n  const findWrongLetters = () => {\n    let wrongLetters = userLetters.filter((userLetter) => {\n      return !word.includes(userLetter);\n    })\n    return wrongLetters;\n  }\n  const renderErrorLetters = () => {\n    return findWrongLetters().map((incorrectLetter, index) => {\n      return <li key={index} className=\"letter\">{incorrectLetter}</li>\n    })\n  }\n\n  // const youLost = () => {\n  //   if (calcErrors() === 13) {\n  //     console.log('you lost');\n  //   }\n  // }\n  // youLost();\n\n  const calcErrors = () => {\n    nErrors = findWrongLetters().length;\n    return nErrors;\n  }\n\n  return (\n    <div className=\"page\">\n      {/* <Header></Header> */}\n      <Routes>\n        <Route path='/' element={<Game renderSolutionLetters={renderSolutionLetters}\n          renderErrorLetters={renderErrorLetters}\n          handleLastLetter={handleLastLetter}\n          lastLetter={lastLetter}\n          calcErrors={calcErrors}>\n        </Game>} />\n        <Route path='/instructions' element={<Instructions calcErrors={calcErrors}></Instructions>} />\n        <Route path='/options' element={<Options calcErrors={calcErrors} handleInput={handleInput}>\n        </Options>} />\n        <Route path='*' element={<NotFoundPage calcErrors={calcErrors}></NotFoundPage>} />\n      </Routes>\n      {/* <Footer></Footer> */}\n    </div>\n  );\n}\n\nexport default App;\n","// Fichero src/index.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}