{"version":3,"sources":["services/callToApi.js","components/Header.js","components/Dummy.js","components/Loading.js","components/SolutionLetters.js","components/ErrorLetters.js","components/Form.js","components/ModalWindow.js","components/Game.js","components/Footer.js","components/Instructions.js","components/Options.js","components/NotFoundPage.js","components/App.js","index.js"],"names":["callToApi","fetch","then","response","json","body","Word","Header","className","Dummy","props","calcErrors","Loading","isLoading","SolutionLetters","renderSolutionLetters","ErrorLetters","renderErrorLetters","Form","onSubmit","ev","preventDefault","htmlFor","onChange","handleLastLetter","autoComplete","maxLength","type","name","id","value","lastLetter","ModalWindow","useState","hidden","setHidden","hasWon","onClick","children","Game","word","Footer","navData","isActive","to","Instructions","role","title","Options","console","log","target","handleInput","autoFocus","NotFoundPage","App","foundLetters","setLastLetter","setWord","userLetters","setUserLetters","setIsLoading","setHasWon","useEffect","findLetters","letter","find","userLetter","toLocaleLowerCase","replace","findWrongLetters","filter","includes","length","checkWon","wordLetters","split","forEach","path","element","map","index","incorrectLetter","isValid","pattern","RegExp","test","validar","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e3e0ea7.chunk.js","sourcesContent":["const callToApi = () => {\r\n    return fetch('https://palabras-aleatorias-public-api.herokuapp.com/random')\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            const result = response.body.Word;\r\n            return result;\r\n        });\r\n};\r\n\r\nexport default callToApi;","import '../styles/components/Header.scss';\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1 className=\"header__title\">Juego del ahorcado</h1>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import '../styles/components/Dummy.scss';\r\nconst Dummy = (props) => {\r\n    return (\r\n        <section className={`dummy error-${props.calcErrors()}`}>\r\n            <span className=\"error-13 eye\"></span>\r\n            <span className=\"error-12 eye\"></span>\r\n            <span className=\"error-11 line\"></span>\r\n            <span className=\"error-10 line\"></span>\r\n            <span className=\"error-9 line\"></span>\r\n            <span className=\"error-8 line\"></span>\r\n            <span className=\"error-7 line\"></span>\r\n            <span className=\"error-6 head\"></span>\r\n            <span className=\"error-5 line\"></span>\r\n            <span className=\"error-4 line\"></span>\r\n            <span className=\"error-3 line\"></span>\r\n            <span className=\"error-2 line\"></span>\r\n            <span className=\"error-1 line\"></span>\r\n        </section>\r\n    )\r\n}\r\nexport default Dummy;","import '../styles/components/Loading.scss';\r\nconst Loading = (props) => {\r\n    const renderLoading = () => {\r\n        if (props.isLoading) {\r\n            return (<span className=\"loading\" />);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {renderLoading()}\r\n        </>\r\n\r\n    )\r\n}\r\nexport default Loading;","import '../styles/components/_letters.scss';\r\nimport Loading from './Loading';\r\nconst SolutionLetters = (props) => {\r\n    return (\r\n        <div className=\"solution\">\r\n            <h2 className=\"title\">Soluci√≥n:</h2>\r\n            <Loading isLoading={props.isLoading}></Loading>\r\n            <ul className=\"letters\">\r\n                {props.renderSolutionLetters()}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default SolutionLetters;","import '../styles/components/_letters.scss';\r\nconst ErrorLetters = (props) => {\r\n    return (\r\n        <div className=\"feedback\">\r\n            <h2 className=\"title\">Letras falladas:</h2>\r\n            <ul className=\"letters\">\r\n                {props.renderErrorLetters()}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default ErrorLetters;","import '../styles/components/_form.scss';\r\nconst Form = (props) => {\r\n    return (\r\n        <form className=\"form\" onSubmit={ev => ev.preventDefault()}>\r\n            <label className=\"title\" htmlFor=\"last-letter\">\r\n                Escribe una letra:\r\n            </label>\r\n            <input\r\n                onChange={props.handleLastLetter}\r\n                autoComplete=\"off\"\r\n                className=\"form__input\"\r\n                maxLength=\"1\"\r\n                type=\"text\"\r\n                name=\"last-letter\"\r\n                id=\"last-letter\"\r\n                value={props.lastLetter}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nexport default Form;","import '../styles/core/ModalWindow.scss';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction ModalWindow(props) {\r\n    const [hidden, setHidden] = useState('');\r\n    const gameOverMessage = () => {\r\n        if (props.calcErrors() === 13) {\r\n            return \"Has perdido :(\";\r\n        }\r\n        else if (props.hasWon) {\r\n            return \"Has ganado!! :D\";\r\n        }\r\n    }\r\n\r\n    const handleModal = () => {\r\n        setHidden('hidden');\r\n    }\r\n    return (\r\n        <div className={`modal ${hidden}`}>\r\n            <div className='modal__dialog'>\r\n                <div className='modal__content'>\r\n                    <header className='modal__header'>\r\n                        <h2 className='modal__title'>{gameOverMessage()}</h2>\r\n                        <div onClick={handleModal}>\r\n                            <span className='modal__close icon fas fa-times'></span>\r\n                        </div>\r\n                    </header>\r\n                    <section className='modal__contents_section'>\r\n                        {props.children}\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalWindow;","import Dummy from './Dummy';\r\nimport SolutionLetters from './SolutionLetters';\r\nimport ErrorLetters from './ErrorLetters';\r\nimport Form from './Form';\r\nimport ModalWindow from './ModalWindow';\r\n\r\nconst Game = (props) => {\r\n    const renderModal = () => {\r\n        if (props.calcErrors() === 13) {\r\n            return (\r\n                <ModalWindow calcErrors={props.calcErrors} hasWon={props.hasWon}>\r\n                    <p>El resultado era: {props.word}</p>\r\n                </ModalWindow>\r\n            )\r\n        }\r\n        else if (props.hasWon) {\r\n            return (\r\n                <ModalWindow calcErrors={props.calcErrors} hasWon={props.hasWon}>\r\n                    <p>Felicidades</p>\r\n                </ModalWindow>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <main className=\"main\">\r\n            <section>\r\n                <SolutionLetters renderSolutionLetters={props.renderSolutionLetters} isLoading={props.isLoading}>\r\n                </SolutionLetters>\r\n                <ErrorLetters renderErrorLetters={props.renderErrorLetters}></ErrorLetters>\r\n                <Form handleLastLetter={props.handleLastLetter} lastLetter={props.lastLetter}></Form>\r\n            </section>\r\n            <Dummy calcErrors={props.calcErrors}></Dummy>\r\n            {renderModal()}\r\n        </main>\r\n\r\n    )\r\n}\r\n\r\nexport default Game;","import '../styles/components/Footer.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <nav>\r\n                <ul className=\"footer__menu\">\r\n                    <li className=\"footer__menu-item\">\r\n                        <NavLink className={(navData) => { return (navData.isActive ? \"footer__menu-link active\" : \"footer__menu-link \") }} to=\"/\">\r\n                            A jugar\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"footer__menu-item\">\r\n                        <NavLink className={(navData) => { return (navData.isActive ? \"footer__menu-link active\" : \"footer__menu-link \") }} to=\"/instructions\">\r\n                            ¬øC√≥mo se juega?\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className=\"footer__menu-item\">\r\n                        <NavLink className={(navData) => { return (navData.isActive ? \"footer__menu-link active\" : \"footer__menu-link \") }} to=\"/options\">\r\n                            M√°s opciones\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <small className=\"footer__copy\">¬© Adalab</small>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import '../styles/components/Instructions.scss';\r\nimport Dummy from \"./Dummy\";\r\nimport { Link } from 'react-router-dom';\r\nconst Instructions = (props) => {\r\n    return (\r\n\r\n        <div className=\"instructions_page\">\r\n            <section className=\"instructions\">\r\n                <h2>Instrucciones del juego:</h2>\r\n                <p>Hay dos modalidades para jugar al juego del ahorcado: </p>\r\n                <h4 className=\"instructions_headings\">1.) Tratar de adivinar una palabra aleatoria:</h4>\r\n                <p>\r\n                    √önicamente habr√° que ir introduciendo una por una letras en el campo de texto hasta que se complete la palabra. Pero cuidado de no fallar m√°s de 13 veces <span role=\"img\" aria-label=\"emoji calavera\" title=\"emoji calavera\">&#128128;</span>\r\n                </p>\r\n                <h4 className=\"instructions_headings\">2. ) Jugar en grupo:</h4>\r\n                <p>\r\n                    En la pesta√±a de <Link to=\"/options\">M√°s opciones</Link> se introducir√° una palabra (secretamente). A continuaci√≥n habr√° que dirigirse de nuevo a la pesta√±a<Link to=\"/\"> A jugar</Link>. All√≠ el resto de personas tratar√°n de adivinar dicha palabra.\r\n                </p>\r\n            </section>\r\n            <Dummy calcErrors={props.calcErrors}></Dummy>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Instructions;","import '../styles/components/Options.scss';\r\nimport Dummy from \"./Dummy\";\r\n\r\nconst Options = (props) => {\r\n    const handleWordToGuess = (ev) => {\r\n        console.log(ev.target.value);\r\n        props.handleInput(ev.target.value);\r\n    }\r\n    return (\r\n        <section className=\"options\">\r\n            <div className=\"options_container\">\r\n                <form onSubmit={(ev) => { ev.preventDefault() }}>\r\n                    <label className=\"title\" htmlFor=\"word\">\r\n                        Escribe aqu√≠ la palabra que hay que adivinar:\r\n                    </label>\r\n                    <input\r\n                        onChange={handleWordToGuess}\r\n                        autoFocus\r\n                        autoComplete=\"off\"\r\n                        className=\"form__input\"\r\n                        maxLength=\"15\"\r\n                        type=\"text\"\r\n                        id=\"word\"\r\n                        name=\"word\"\r\n                    />\r\n                </form>\r\n            </div>\r\n            <Dummy calcErrors={props.calcErrors}></Dummy>\r\n        </section>\r\n\r\n    )\r\n}\r\nexport default Options;","import { Link } from 'react-router-dom';\r\nimport '../styles/components/NotFoundPage.scss';\r\nimport Dummy from \"./Dummy\";\r\n\r\n\r\nconst NotFoundPage = (props) => {\r\n    return (\r\n        <div className=\"nofoundpage\">\r\n            <div className=\"nofoundpage_message\">\r\n                <h2>Parece que aqu√≠ no hay nada</h2>\r\n                <Link to=\"/\">Volver al inicio</Link>\r\n            </div>\r\n            <Dummy calcErrors={props.calcErrors}></Dummy>\r\n        </div>\r\n    )\r\n}\r\nexport default NotFoundPage;","import '../styles/main.scss';\nimport { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport callToApi from '../services/callToApi';\nimport Header from './Header';\nimport Game from './Game';\nimport Footer from './Footer';\nimport Instructions from './Instructions';\nimport Options from './Options';\nimport NotFoundPage from './NotFoundPage';\n\n\n\n\nfunction App() {\n  let nErrors;\n  let foundLetters = 1;\n  const [lastLetter, setLastLetter] = useState('');\n  const [word, setWord] = useState('');\n  const [userLetters, setUserLetters] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasWon, setHasWon] = useState(false);\n\n  useEffect(() => {\n    callToApi().then(response => {\n      setIsLoading(false);\n      setWord(response);\n    })\n  }, []);\n\n  // start of handleLastLetter()\n  const handleLastLetter = (ev) => {\n    setLastLetter(ev.target.value);\n    const valido = validar(ev.target.value);\n    if (valido) {\n      const isIn = userLetters.find((userLetter) => {\n        return userLetter === ev.target.value;\n      })\n      if (!isIn) {\n        checkWon();\n        setUserLetters([...userLetters, ev.target.value]);\n      }\n    }\n  };\n  // end of handleLastLetter()\n\n  // start of validar()\n  function validar(value) {\n    let isValid;\n    // pattern to match:\n    const pattern = new RegExp('^[a-zA-Z√Ä-√ø\\u00f1\\u00d1]$');\n    //if input is empty it won't be valid:\n    if (!value) {\n      isValid = false;\n    } else {\n      //if input doesn't match the permitted pattern it won't be valid:\n      if (!pattern.test(value)) {\n        isValid = false;\n      } else {\n        isValid = true;\n      }\n    }\n    return isValid;\n  }\n  // end of validar()\n\n  const handleInput = (value) => {\n    setWord(value);\n    setLastLetter('');\n    setUserLetters([]);\n  }\n\n  const replaceAccents = (str) => {\n    str = str.toLocaleLowerCase();\n    str = str.replace(/[√†√°√¢√£√§√•]/, \"a\");\n    str = str.replace(/[√®√©√™√´]/, \"e\");\n    str = str.replace(/[√¨√≠√Æ√Ø]/, \"i\");\n    str = str.replace(/[√≤√≥√¥√∂]/, \"o\");\n    str = str.replace(/[√π√∫√ª√º]/, \"u\");\n    str = str.replace(/[√ß]/, \"c\");\n    return str;\n  }\n\n  const findLetters = (letter) => {\n    return userLetters.find((userLetter) => {\n      letter = replaceAccents(letter);\n      return userLetter === letter;\n    })\n  }\n\n\n  const renderSolutionLetters = () => {\n    const wordLetters = word.split('');\n    return wordLetters.map((letter, index) => {\n      if (findLetters(letter)) {\n        return <li key={index} className=\"letter\">{letter}</li>\n      }\n      else {\n        return <li key={index} className=\"letter\"></li>\n      }\n\n    });\n  }\n\n  const findWrongLetters = () => {\n    let wrongLetters = userLetters.filter((userLetter) => {\n      return !word.includes(userLetter);\n    })\n    return wrongLetters;\n  }\n  const renderErrorLetters = () => {\n    return findWrongLetters().map((incorrectLetter, index) => {\n      return <li key={index} className=\"letter\">{incorrectLetter}</li>\n    })\n  }\n\n  const calcErrors = () => {\n    nErrors = findWrongLetters().length;\n    return nErrors;\n  }\n  // const calcRights = (word) => {\n  //   console.log(nRights);\n  //   nRights = nRights + 1;\n  //   console.log(nRights);\n  //   if (nRights === word.length) {\n  //     console.log('has ganado');\n  //     return true;\n  //   }\n  //   else {\n  //     return false;\n  //   }\n  // }\n  const checkWon = () => {\n    const wordLetters = word.split('');\n    wordLetters.forEach((letter) => {\n      if (findLetters(letter)) {\n        foundLetters++;\n        console.log(foundLetters);\n      }\n    })\n    if (foundLetters === wordLetters.length) {\n      setHasWon(true);\n    }\n  }\n\n  return (\n    <div className=\"page\">\n      <Header></Header>\n      <Routes>\n        <Route path='/' element={<Game renderSolutionLetters={renderSolutionLetters}\n          renderErrorLetters={renderErrorLetters}\n          handleLastLetter={handleLastLetter}\n          lastLetter={lastLetter}\n          calcErrors={calcErrors}\n          isLoading={isLoading}\n          word={word}\n          hasWon={hasWon}>\n        </Game>} />\n        <Route path='/instructions' element={<Instructions calcErrors={calcErrors}></Instructions>} />\n        <Route path='/options' element={<Options calcErrors={calcErrors} handleInput={handleInput}>\n        </Options>} />\n        <Route path='*' element={<NotFoundPage calcErrors={calcErrors}></NotFoundPage>} />\n      </Routes>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// Fichero src/index.js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}